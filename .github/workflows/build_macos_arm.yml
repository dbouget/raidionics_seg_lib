name: Build macOS ARM

on:
  push:
    branches: [master,update]
  pull_request:
    branches: [master, release]
  workflow_dispatch:

env:
  MACOSX_DEPLOYMENT_TARGET: 11.0

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-14
            TARGET: macos
            CMD_BUILD: python3 -m build --wheel

    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: arch -arm64 brew reinstall zlib

      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
            pip install --upgrade pip
            pip install build toml

      - name: Build the wheel for ${{matrix.TARGET}}
        run: ${{matrix.CMD_BUILD}}

      - name: Extract package version from pyproject.toml
        run: |
          version=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
          echo "VERSION=$version" >> $GITHUB_ENV  # Save version to GITHUB_ENV to use in next steps

      - name: Rename the wheel file
        run: |
          wheel_file=$(ls ${{github.workspace}}/dist/*.whl)      
          new_wheel_name="raidionicsseg-${{ env.VERSION }}-py3-none-macosx_11_0_arm64.whl"
          mv "$wheel_file" "${{github.workspace}}/dist/$new_wheel_name"

      - name: Upload Python wheel
        uses: actions/upload-artifact@v4
        with:
          name: Python wheel
          path: ${{github.workspace}}/dist/raidionicsseg-*.whl
          if-no-files-found: error

  test:
    needs: build
    strategy:
      matrix:
        os: [macos-14, macos-15]
        python-version: ["3.10", "3.11"]
    runs-on: ${{ matrix.os }}

    steps:
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v5
          with:
            python-version: ${{ matrix.python-version }}

        - name: Download artifact
          uses: actions/download-artifact@v4
          with:
            name: "Python wheel"

        - name: Install wheel
          run: |
              pip install --upgrade pip
              pip install --default-timeout=100 --find-links=${{github.workspace}} --no-cache-dir --force-reinstall raidionicsseg-*
          shell: bash

        - name: Test CLI
          run: python -m raidionicsseg --help

        - name: Clone repo
          uses: actions/checkout@v4

        - name: Integration tests
          run: |
              pip install pytest pytest-cov pytest-timeout requests
              pytest -vvv --cov=raidionicsseg ${{github.workspace}}/tests/generic_tests --cov-report=xml --timeout=1000 --log-cli-level=DEBUG
